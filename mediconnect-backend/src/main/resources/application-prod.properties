# Production Configuration for MediConnect

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# MongoDB Configuration (Atlas)
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/mediconnect}
spring.data.mongodb.database=mediconnect

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-change-this-in-production}
jwt.expiration=300000
jwt.refresh-expiration=600000

# AWS S3 Configuration
aws.s3.bucket-name=${S3_BUCKET_NAME:mediconnect-files}
aws.s3.region=${AWS_REGION:ap-south-1}
aws.s3.access-key=${AWS_ACCESS_KEY_ID}
aws.s3.secret-key=${AWS_SECRET_ACCESS_KEY}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.root=INFO
logging.level.com.mediconnect=DEBUG
logging.level.org.springframework.web=INFO
logging.file.name=logs/mediconnect.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://yourdomain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# WebSocket Configuration
websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,https://yourdomain.com}

# Security Configuration
google.maps.api.key=${GOOGLE_MAS_API_KEY}}

# Performance Configuration
spring.data.mongodb.auto-index-creation=true
spring.jpa.hibernate.ddl-auto=validate

# Health Check Endpoint
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized