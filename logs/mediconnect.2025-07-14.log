2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:00:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:02:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:04:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:06:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=PENDING", parameters={masked}
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=REJECTED", parameters={masked}
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=VERIFIED", parameters={masked}
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : VERIFIED } }, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : REJECTED } }, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : PENDING } }, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "REJECTED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "PENDING"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-08T12:30:53.890, specialty=Cardiology, name=nikhil raj, verifiedAt=null, locat (truncated)...]
2025-07-14 00:06:39 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a82"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a88"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=PENDING", parameters={masked}
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a8a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : PENDING } }, Fields: {}, Sort: {}
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "PENDING"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a90"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-08T12:30:53.890, specialty=Cardiology, name=nikhil raj, verifiedAt=null, locat (truncated)...]
2025-07-14 00:06:39 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a92"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a96"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aaa"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aac"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aae"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abe"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8aca"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8acc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ace"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ada"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8adc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ade"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-01T01:21:07.639, specialty=Cardiology, name=Nischay Raj, verifiedAt=2025-06-01 (truncated)...]
2025-07-14 00:06:39 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:08:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/appointments
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/appointments
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/appointments", parameters={}
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:08:47 [http-nio-8080-exec-1] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/appointments - Error: No static resource api/doctors/appointments.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/appointments.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@631858c3]
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/appointments.]
2025-07-14 00:08:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/appointments
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/appointments
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/appointments", parameters={}
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:08:58 [http-nio-8080-exec-10] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/appointments - Error: No static resource api/doctors/appointments.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/appointments.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@33884dfd]
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/appointments.]
2025-07-14 00:08:58 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:10:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:11:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:11:13 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:11:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:12:32 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:14:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:16:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:18:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:20:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:22:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 00:23:20 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:24:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0Lm (truncated)...]
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 00:28:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 00:28:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/patient
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/patient
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/patient", parameters={}
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getPatientAppointments(String, String)
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<java.util.List<com.mediconnect.dto.appointment.AppointmentResponse>> com.mediconnect.controller.AppointmentController.getPatientAppointments(java.lang.String,java.lang.String): Missing request attribute 'userId' of type String
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:28:33 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/appointments/patient - Error: Missing request attribute 'userId' of type String
org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String
	at org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver.handleMissingValue(RequestAttributeMethodArgumentResolver.java:60)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:233)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:228)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@556e53e3]
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String]
2025-07-14 00:28:33 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/patient
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/patient
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/patient", parameters={}
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getPatientAppointments(String, String)
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<java.util.List<com.mediconnect.dto.appointment.AppointmentResponse>> com.mediconnect.controller.AppointmentController.getPatientAppointments(java.lang.String,java.lang.String): Missing request attribute 'userId' of type String
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:28:41 [http-nio-8080-exec-5] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/appointments/patient - Error: Missing request attribute 'userId' of type String
org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String
	at org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver.handleMissingValue(RequestAttributeMethodArgumentResolver.java:60)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:233)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:228)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@43e6e924]
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String]
2025-07-14 00:28:41 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11264727790979&longitude=85.39095887654514&radius=35&specialization=&page=0&size=10
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11264727790979&longitude=85.39095887654514&radius=35&specialization=&page=0&size=10
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11264727790979&longitude=85.39095887654514&radius=35&specialization=&page=0&size=10", parameters={masked}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39095887654514, 26.11264727790979]}}, $maxDistance=35000.0}}}}}} for Document{{}} fields.
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39095887654514, 26.11264727790979]}, "$maxDistance" : 35000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "682b49a39b08af1a6704d944", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "682b49a39b08af1a6704d944", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 00:28:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43", parameters={}
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f43"}, Fields: {}, Sort: {}
2025-07-14 00:28:49 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f43"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 00:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 00:28:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 00:28:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:28:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:28:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 00:28:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 00:28:51 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 00:29:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:29:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:29:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:30:27 [http-nio-8080-exec-5] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@2c3bdfbe]
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:30:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:31:41 [http-nio-8080-exec-3] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@248115d9]
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:31:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:31:50 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:31:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 00:32:34 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:33:14 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:34:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:34:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:34:25 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:34:25 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 00:36:35 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:37:14 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:37:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:37:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:37:46 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:37:52 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:37:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:37:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:37:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:37:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:38:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:38:46 [http-nio-8080-exec-4] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@1d2f0664]
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:38:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:38:48 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:38:50 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@4cb2b0e7]
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:38:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:39:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:39:39 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:39:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:40:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:11 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:40:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:40:12 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:40:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 00:40:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:41:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:45:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:45:15 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:45:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:45:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:45:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:45:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:45:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:45:38 [http-nio-8080-exec-1] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@6bb5c87e]
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:45:38 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:45:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:45:43 [http-nio-8080-exec-4] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@485fa013]
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:45:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:46:18 [http-nio-8080-exec-6] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@6070494e]
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:46:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/schedule
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/schedule
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/schedule", parameters={}
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:46:30 [http-nio-8080-exec-5] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/doctors/schedule - Error: No static resource api/doctors/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@5578813e]
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/doctors/schedule.]
2025-07-14 00:46:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:47:11 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@5914f915]
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:47:11 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:47:22 [http-nio-8080-exec-3] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@399c5958]
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:47:22 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:47:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:47:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:47:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:47:29 [http-nio-8080-exec-10] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@623b8b25]
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:47:29 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:47:37 [http-nio-8080-exec-9] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@635ed15b]
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:47:37 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:48:00 [http-nio-8080-exec-7] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@6176a1ee]
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:48:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:49:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:49:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:50:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:50:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 00:50:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule", parameters={}
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 00:50:31 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/schedule - Error: No static resource api/schedule.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@193dea97]
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/schedule.]
2025-07-14 00:50:31 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:50:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:51:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:51:47 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:51:47 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:51:47 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:51:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:52:27 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:52:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:52:29 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=null, startTime=00:52, endTime=07:27, isRecurring=true, recurringEndDa (truncated)...]
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 00:52:57 [http-nio-8080-exec-6] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Slot duration cannot be less than 15 minutes
java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:191)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@278614a5]
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes]
2025-07-14 00:52:57 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:53:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=null, startTime=00:53, endTime=17:00, isRecurring=false, recurringEndD (truncated)...]
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 00:53:36 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Slot duration cannot be less than 15 minutes
java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:191)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@32b0b8b]
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes]
2025-07-14 00:53:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=null, startTime=00:53, endTime=17:00, isRecurring=false, recurringEndD (truncated)...]
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:53:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:53:53 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 00:53:53 [http-nio-8080-exec-3] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Slot duration cannot be less than 15 minutes
java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:191)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:53:53 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:53:53 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@5999b3f6]
2025-07-14 00:53:53 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes]
2025-07-14 00:53:53 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:54:13 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=null, startTime=00:53, endTime=17:00, isRecurring=false, recurringEndD (truncated)...]
2025-07-14 00:54:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:54:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:54:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 00:54:46 [http-nio-8080-exec-10] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Slot duration cannot be less than 15 minutes
java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:191)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:54:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:54:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@284f07c1]
2025-07-14 00:54:46 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Slot duration cannot be less than 15 minutes]
2025-07-14 00:54:46 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/slots
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/slots
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/slots", parameters={}
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlotsInRange(DeleteSlotsRequest)
2025-07-14 00:55:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [DeleteSlotsRequest(startDate=2025-07-14, endDate=2025-07-14, startTime=09:00, endTime=17:00)]
2025-07-14 00:55:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:55:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:55:05 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Mon Jul 14 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 00:55:05 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-13T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:55:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 00:55:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 00:55:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:55:06 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:55:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:57:00 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:57:06 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 00:57:15 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-13, startTime=00:54, endTime=23:19, isRecurring=true, recurrin (truncated)...]
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 00:57:26 [http-nio-8080-exec-4] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot add slots for past dates
java.lang.IllegalArgumentException: Cannot add slots for past dates
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:211)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@217162db]
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Cannot add slots for past dates]
2025-07-14 00:57:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 00:58:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=00:58, endTime=10:13, isRecurring=true, recurrin (truncated)...]
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-15 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-14T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-16 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-15T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-17 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-16T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-18 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-17T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-19 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-18T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-20 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-19T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-22 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-21T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-23 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-22T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-24 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-23T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-25 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-24T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-26 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-25T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-27 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-26T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-29 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-28T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-30 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-29T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-31 } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-30T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=null, calendarId=null, startTime=2025-07-15T00: (truncated)...]
2025-07-14 00:58:52 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 00:58:52 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 00:59:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 00:59:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 00:59:17 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 00:59:17 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 00:59:19 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 00:59:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 00:59:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:00:37 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:00:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:00:51 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:00:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:00:54 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:00:54 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:00:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:54 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03", parameters={masked}
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-01 }, { "$java" : 2025-07-02 }, { "$java" : 2025-07-03 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-06-30T18:30:00Z"}, { "$date" : "2025-07-01T18:30:00Z"}, { "$date" : "2025-07-02T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:55 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:56 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:00:57 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:00:57 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:00:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:00:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:00:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 01:00:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 01:00:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-31,2025-08-01,2025-08-02
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-31,2025-08-01,2025-08-02
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-31,2025-08-01,2025-08-02", parameters={masked}
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 01:00:59 [http-nio-8080-exec-6] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/daily - Error: Can only view current month's schedule
java.lang.IllegalArgumentException: Can only view current month's schedule
	at com.mediconnect.service.impl.ScheduleServiceImpl.getDailySchedule(ScheduleServiceImpl.java:37)
	at com.mediconnect.controller.ScheduleController.getDailySchedule(ScheduleController.java:39)
	at jdk.internal.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@63a4c7ab]
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Can only view current month's schedule]
2025-07-14 01:00:59 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:01:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 01:02:13 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 01:02:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 01:02:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:02:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:02:19 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:02:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/bc393fa1-2fa9-4b73-b245-598279baf75e
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/bc393fa1-2fa9-4b73-b245-598279baf75e
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/calendar/687408f469aa0d65230a1e2f/slots/bc393fa1-2fa9-4b73-b245-598279baf75e", parameters={}
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlot(String, String)
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "id" : "687408f469aa0d65230a1e2f", "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "_id" : { "$oid" : "687408f469aa0d65230a1e2f"}, "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:02:38 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:38 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:44 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/01af27bf-8e79-4e7f-bfcd-5bfdf09f6a15
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/01af27bf-8e79-4e7f-bfcd-5bfdf09f6a15
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/calendar/687408f469aa0d65230a1e2f/slots/01af27bf-8e79-4e7f-bfcd-5bfdf09f6a15", parameters={}
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlot(String, String)
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "id" : "687408f469aa0d65230a1e2f", "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "_id" : { "$oid" : "687408f469aa0d65230a1e2f"}, "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:02:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/6c49a65e-1595-4fed-b94b-f92066d397d8
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/calendar/687408f469aa0d65230a1e2f/slots/6c49a65e-1595-4fed-b94b-f92066d397d8
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/calendar/687408f469aa0d65230a1e2f/slots/6c49a65e-1595-4fed-b94b-f92066d397d8", parameters={}
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlot(String, String)
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "id" : "687408f469aa0d65230a1e2f", "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:02:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "_id" : { "$oid" : "687408f469aa0d65230a1e2f"}, "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:02:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:02:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:02:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 01:02:51 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:02:51 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:02:52 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:02:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:02:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:02:58 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 01:02:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 01:02:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-31
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-31
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-31", parameters={masked}
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=003ce4b6-aefd-4d9d-95f4-95f98aa0f542, calendarI (truncated)...]
2025-07-14 01:03:00 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:03:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:05 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03", parameters={masked}
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-01 }, { "$java" : 2025-07-02 }, { "$java" : 2025-07-03 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-06-30T18:30:00Z"}, { "$date" : "2025-07-01T18:30:00Z"}, { "$date" : "2025-07-02T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:03:07 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:03:08 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:03:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:03:08 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:03:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/slots
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/slots
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/slots", parameters={}
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlotsInRange(DeleteSlotsRequest)
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [DeleteSlotsRequest(startDate=2025-07-14, endDate=2025-07-24, startTime=09:00, endTime=23:00)]
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 24 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:03:22 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-23T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:03:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:03:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 01:03:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:03:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2a853900-8396-4a6f-8161-9a1c52d48ef3, calendarI (truncated)...]
2025-07-14 01:03:51 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=988655f3-d4fe-4168-b6e0-c71dab19cd15, calendarI (truncated)...]
2025-07-14 01:03:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:03:52 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:03:52 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 01:03:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 01:03:54 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:03:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/slots
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/slots
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/slots", parameters={}
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlotsInRange(DeleteSlotsRequest)
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [DeleteSlotsRequest(startDate=2025-07-14, endDate=2025-07-16, startTime=00:00, endTime=17:00)]
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Wed Jul 16 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-15T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:04:11 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=2e5debee-90b1-422f-8fae-afd5c6681ae1, calendarI (truncated)...]
2025-07-14 01:04:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 01:04:12 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:04:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 01:04:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/slots
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/slots
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/slots", parameters={}
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlotsInRange(DeleteSlotsRequest)
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [DeleteSlotsRequest(startDate=2025-07-18, endDate=2025-07-19, startTime=00:00, endTime=17:00)]
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Fri Jul 18 00:00:00 IST 2025, $lte=Sat Jul 19 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-17T18:30:00Z"}, "$lte" : { "$date" : "2025-07-18T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:04:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 01:04:31 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 01:04:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 01:04:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/patient
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/patient
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/patient", parameters={}
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getPatientAppointments(String, String)
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<java.util.List<com.mediconnect.dto.appointment.AppointmentResponse>> com.mediconnect.controller.AppointmentController.getPatientAppointments(java.lang.String,java.lang.String): Missing request attribute 'userId' of type String
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 01:04:51 [http-nio-8080-exec-3] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/appointments/patient - Error: Missing request attribute 'userId' of type String
org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String
	at org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver.handleMissingValue(RequestAttributeMethodArgumentResolver.java:60)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:233)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:228)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@4cc06366]
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String]
2025-07-14 01:04:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=0&size=10
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=0&size=10
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=0&size=10", parameters={masked}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39133696714704, 26.11245362491564]}}, $maxDistance=189000.0}}}}}} for Document{{}} fields.
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39133696714704, 26.11245362491564]}, "$maxDistance" : 189000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39133696714704, 26.11245362491564]}, "$maxDistance" : 189000.0}}} in collection: doctor_profiles
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "682b49a39b08af1a6704d944", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "682b49a39b08af1a6704d944", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68314d555d37715ae44bbc61", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68314d555d37715ae44bbc61", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683b137b41e14958ba582bd1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683b137b41e14958ba582bd1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6833452b3390217d0f509823", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6833452b3390217d0f509823", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5ffdc21038ac1e8ac6", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5ffdc21038ac1e8ac6", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 6 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:04:56 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/a178d677-9fd2-4fe3-b9db-2532f8885a81
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/a178d677-9fd2-4fe3-b9db-2532f8885a81
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/a178d677-9fd2-4fe3-b9db-2532f8885a81", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "a178d677-9fd2-4fe3-b9db-2532f8885a81"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "a178d677-9fd2-4fe3-b9db-2532f8885a81"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f43", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f43"}, Fields: {}, Sort: {}
2025-07-14 01:04:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:56 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f43"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:04:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:04:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f42
2025-07-14 01:04:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/a6944e44-e669-457c-89f1-392c23b1cee9
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f42
2025-07-14 01:04:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/592443b2-3ca3-47c3-88b8-8fb0f3d94f42", parameters={}
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/a6944e44-e669-457c-89f1-392c23b1cee9
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/a6944e44-e669-457c-89f1-392c23b1cee9", parameters={}
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f42"}, Fields: {}, Sort: {}
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "a6944e44-e669-457c-89f1-392c23b1cee9"}, Fields: {}, Sort: {}
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "592443b2-3ca3-47c3-88b8-8fb0f3d94f42"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "a6944e44-e669-457c-89f1-392c23b1cee9"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:04:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:04:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:04:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 1, -46, 0, 0, 1, -42, 8, 6, 0, (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:04:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:04:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=1&size=10
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=1&size=10
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11245362491564&longitude=85.39133696714704&radius=189&specialization=&page=1&size=10", parameters={masked}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39133696714704, 26.11245362491564]}}, $maxDistance=189000.0}}}}}} for Document{{}} fields.
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39133696714704, 26.11245362491564]}, "$maxDistance" : 189000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - Executing count: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39133696714704, 26.11245362491564]}, "$maxDistance" : 189000.0}}} in collection: doctor_profiles
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5efdc21038ac1e8a9e", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5efdc21038ac1e8a9e", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5ffdc21038ac1e8aba", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5ffdc21038ac1e8aba", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5ffdc21038ac1e8ab2", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5ffdc21038ac1e8ab2", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5efdc21038ac1e8a98", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5efdc21038ac1e8a98", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5efdc21038ac1e8a94", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5efdc21038ac1e8a94", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5dfdc21038ac1e8a84", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5dfdc21038ac1e8a84", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a60fdc21038ac1e8ac8", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a60fdc21038ac1e8ac8", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5dfdc21038ac1e8a86", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5dfdc21038ac1e8a86", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5ffdc21038ac1e8ac4", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5ffdc21038ac1e8ac4", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "68442a5efdc21038ac1e8a8e", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "68442a5efdc21038ac1e8a8e", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 2 of 6 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:05:07 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:05:15 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:37 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 01:07:38 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-17
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-17
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-17", parameters={masked}
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorDaySlots(String, LocalDate)
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-17 } }, Fields: {}, Sort: {}
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-16T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{calendarId=687408f469aa0d65230a1e2e, startTime=2025-07-17T00:58, id=6cbb649d-e6d2-44c4-bc77-31dfc0 (truncated)...]
2025-07-14 01:07:40 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/appointments
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/appointments
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/appointments", parameters={}
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#createAppointment(AppointmentRequest)
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AppointmentRequest(doctorId=6873920969aa0d65230a1e2a, date=2025-07-17, calendarId=687408f469aa0d6523 (truncated)...]
2025-07-14 01:07:58 [http-nio-8080-exec-7] INFO  c.m.controller.AppointmentController - Creating appointment - Doctor: 6873920969aa0d65230a1e2a, Calendar: 687408f469aa0d65230a1e2e, Slot: 740d235e-2d2c-4e8a-9c63-3d7cc7c99cb4
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{patientId=683b188f41e14958ba582bd4, calendarId=687408f469aa0d65230a1e2e, status=Document{{$nin=[CANCELLED, COMPLETED]}}}} for Document{{}} fields.
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e", "status" : { "$nin" : ["CANCELLED", "COMPLETED"]}} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, patientId, calendarId, slotId, status, type, reason, createdAt, updatedAt, _class] in collection: appointments
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b18 (truncated)...]
2025-07-14 01:07:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 01:08:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 01:08:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:08:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:09:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/appointments/68740b1669aa0d65230a1e3b/confirm
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/appointments/68740b1669aa0d65230a1e3b/confirm
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/appointments/68740b1669aa0d65230a1e3b/confirm", parameters={}
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#confirmAppointment(String)
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, patientId, calendarId, slotId, status, type, reason, createdAt, updatedAt, _class]
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b18 (truncated)...]
2025-07-14 01:09:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 01:09:25 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 01:09:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/profile
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/68740b1669aa0d65230a1e3b
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/profile
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/68740b1669aa0d65230a1e3b
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/profile", parameters={}
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ProfileController#getUserProfile()
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getAppointmentById(String)
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.dto.profile.ProfileResponse@68866b9f]
2025-07-14 01:09:37 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b18 (truncated)...]
2025-07-14 01:09:37 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointment-details/68740b1669aa0d65230a1e3b
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointment-details/68740b1669aa0d65230a1e3b
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointment-details/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentDetailsController#getAppointmentDetails(String)
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "appointmentId" : "68740b1669aa0d65230a1e3b"}, Fields: {}, Sort: {}
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.AppointmentDetails in collection: appointment_details
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentDetailsResponse(id=null, appointmentId=null, transactionId=null, symptoms=null, allergies (truncated)...]
2025-07-14 01:09:37 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/appointment-details/68740b1669aa0d65230a1e3b
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/appointment-details/68740b1669aa0d65230a1e3b
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/appointment-details/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentDetailsController#createOrUpdateAppointmentDetails(String, AppointmentDetailsRequest)
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AppointmentDetailsRequest(transactionId=null, symptoms=[Headache, Fever, Fatigue], allergies=[], fil (truncated)...]
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "appointmentId" : "68740b1669aa0d65230a1e3b"}, Fields: {}, Sort: {}
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.AppointmentDetails in collection: appointment_details
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [appointmentId, symptoms, allergies, chiefComplaint, symptomDuration, painLevel, currentMedications, medicalHistory, additionalNotes, diagnosis, prescription, treatmentPlan, followUpNotes, patientPhone, patientEmergencyContact, createdAt, updatedAt, _class] in collection: appointment_details
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentDetailsResponse(id=68740baf69aa0d65230a1e3c, appointmentId=68740b1669aa0d65230a1e3b, tran (truncated)...]
2025-07-14 01:10:31 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU1MzAsImV4cCI6MTc1MjQzNTgzMH0.s3vrUhc4dXEOzsoN_tpeKs7g9ENWZTNPVgJfCqQK63wVFfhm1ZWowRpHEURNCaSI
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU1MzAsImV4cCI6MTc1MjQzNTgzMH0.s3vrUhc4dXEOzsoN_tpeKs7g9ENWZTNPVgJfCqQK63wVFfhm1ZWowRpHEURNCaSI
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU1MzAsImV4cCI6MTc1MjQzNTgzMH0.s3vrUhc4dXEOzsoN_tpeKs7g9ENWZTNPVgJfCqQK63wVFfhm1ZWowRpHEURNCaSI", parameters={masked}
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.server.support.WebSocketHttpRequestHandler@4a10c019
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHttpRequestHandler - GET /ws/chat
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:10:35 [http-nio-8080-exec-2] INFO  c.m.i.ChatHandshakeInterceptor - WebSocket handshake successful for user: 683b188f41e14958ba582bd4, appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/chat/history/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#getChatHistory(String)
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b}} for Document{{}} fields.
2025-07-14 01:10:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New StandardWebSocketSession[id=a59f7a78-3a3a-e543-81fc-88d10abbd9f3, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU1MzAsImV4cCI6MTc1MjQzNTgzMH0.s3vrUhc4dXEOzsoN_tpeKs7g9ENWZTNPVgJfCqQK63wVFfhm1ZWowRpHEURNCaSI]
2025-07-14 01:10:35 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection established: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=a59f7a78-3a3a-e543-81fc-88d10abbd9f3
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 01:10:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:10:35 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user online status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:10:35 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:10:35 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Started heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:10:45 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:10:45 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:10:55 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:10:55 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:05 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:05 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:15 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:15 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:25 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:25 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:35 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:35 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:45 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:45 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:11:55 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:11:55 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:05 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:05 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:15 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:15 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:25 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:25 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:35 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:35 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:45 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:45 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:12:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:12:55 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:12:55 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:05 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:05 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:15 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:15 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:13:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:13:25 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:25 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:35 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:35 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:45 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:45 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:13:55 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:13:55 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:05 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:05 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:15 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:15 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:25 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:25 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:35 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:35 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:45 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:45 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:48 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - StandardWebSocketSession[id=a59f7a78-3a3a-e543-81fc-88d10abbd9f3, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU1MzAsImV4cCI6MTc1MjQzNTgzMH0.s3vrUhc4dXEOzsoN_tpeKs7g9ENWZTNPVgJfCqQK63wVFfhm1ZWowRpHEURNCaSI] closed with CloseStatus[code=1000, reason=User disconnected]
2025-07-14 01:14:48 [http-nio-8080-exec-3] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection closed: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=a59f7a78-3a3a-e543-81fc-88d10abbd9f3, status=CloseStatus[code=1000, reason=User disconnected]
2025-07-14 01:14:48 [http-nio-8080-exec-3] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user offline status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:14:48 [http-nio-8080-exec-3] WARN  c.m.handler.ChatWebSocketHandler - No active sessions for appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:14:48 [http-nio-8080-exec-3] INFO  c.m.handler.ChatWebSocketHandler - Stopped heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU3NzAsImV4cCI6MTc1MjQzNjA3MH0.ooiXvIK_9-DgaPFVLUW-WpSzgpTxfGw0NXuLCVMCBSYS9X2V4gQSmxmvOsawpKvG
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU3NzAsImV4cCI6MTc1MjQzNjA3MH0.ooiXvIK_9-DgaPFVLUW-WpSzgpTxfGw0NXuLCVMCBSYS9X2V4gQSmxmvOsawpKvG
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU3NzAsImV4cCI6MTc1MjQzNjA3MH0.ooiXvIK_9-DgaPFVLUW-WpSzgpTxfGw0NXuLCVMCBSYS9X2V4gQSmxmvOsawpKvG", parameters={masked}
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.server.support.WebSocketHttpRequestHandler@4a10c019
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHttpRequestHandler - GET /ws/chat
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:14:49 [http-nio-8080-exec-10] INFO  c.m.i.ChatHandshakeInterceptor - WebSocket handshake successful for user: 683b188f41e14958ba582bd4, appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-14 01:14:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New StandardWebSocketSession[id=5768842b-768d-4d94-8ce3-ecfc6285fda4, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU3NzAsImV4cCI6MTc1MjQzNjA3MH0.ooiXvIK_9-DgaPFVLUW-WpSzgpTxfGw0NXuLCVMCBSYS9X2V4gQSmxmvOsawpKvG]
2025-07-14 01:14:49 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection established: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=5768842b-768d-4d94-8ce3-ecfc6285fda4
2025-07-14 01:14:49 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user online status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:14:49 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:14:49 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Started heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/chat/history/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#getChatHistory(String)
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b}} for Document{{}} fields.
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 01:14:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:14:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:14:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:15:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:15:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG c.m.handler.ChatWebSocketHandler - Received WebSocket message: {"appointmentId":"68740b1669aa0d65230a1e3b","content":"ddddddd","type":"TEXT","fileUrl":null,"fileMetadata":null}
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "appointmentId" : "68740b1669aa0d65230a1e3b"}, Fields: {}, Sort: {}
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "_id" : { "$oid" : "68740b1669aa0d65230a1e3b"}} fields: Document{{}} for class: class com.mediconnect.model.ChatRoom in collection: chat_rooms
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, patientId, doctorId, createdAt, lastActivity, isActive, messageCount, activeSessions, _class]
2025-07-14 01:16:34 [http-nio-8080-exec-4] INFO  com.mediconnect.service.ChatService - Created new chat room for appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [appointmentId, senderId, senderType, content, type, timestamp, isSent, isRead, _class] in collection: chat_messages
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, patientId, doctorId, createdAt, lastActivity, isActive, messageCount, activeSessions, _class]
2025-07-14 01:16:34 [http-nio-8080-exec-4] INFO  com.mediconnect.service.ChatService - Message sent successfully: appointmentId=68740b1669aa0d65230a1e3b, senderId=683b188f41e14958ba582bd4, messageId=68740d1a69aa0d65230a1e3d
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740d1a69aa0d65230a1e3d"} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:16:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, appointmentId, senderId, senderType, content, type, timestamp, isSent, isRead, readBy, _class]
2025-07-14 01:16:34 [http-nio-8080-exec-4] INFO  com.mediconnect.service.ChatService - Message marked as sent: messageId=68740d1a69aa0d65230a1e3d, senderId=683b188f41e14958ba582bd4
2025-07-14 01:16:34 [http-nio-8080-exec-4] INFO  c.m.handler.ChatWebSocketHandler - Message processed and broadcasted: appointmentId=68740b1669aa0d65230a1e3b, senderId=683b188f41e14958ba582bd4, messageId=68740d1a69aa0d65230a1e3d
2025-07-14 01:16:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:16:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:16:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:16:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:17:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:17:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - StandardWebSocketSession[id=5768842b-768d-4d94-8ce3-ecfc6285fda4, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzU3NzAsImV4cCI6MTc1MjQzNjA3MH0.ooiXvIK_9-DgaPFVLUW-WpSzgpTxfGw0NXuLCVMCBSYS9X2V4gQSmxmvOsawpKvG] closed with CloseStatus[code=1000, reason=Tab closed]
2025-07-14 01:17:26 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection closed: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=5768842b-768d-4d94-8ce3-ecfc6285fda4, status=CloseStatus[code=1000, reason=Tab closed]
2025-07-14 01:17:26 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user offline status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:17:26 [http-nio-8080-exec-8] WARN  c.m.handler.ChatWebSocketHandler - No active sessions for appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:17:26 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - Stopped heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUyNDM2MDM1LCJleHAiOjE3NTI0MzYzMzV9.qw2JMiBzlxXgDVsaoYE0bEPfMgBkl6opWokLoE0mLS-WDhwkGag90Nl6dmG9iElh
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUyNDM2MDM1LCJleHAiOjE3NTI0MzYzMzV9.qw2JMiBzlxXgDVsaoYE0bEPfMgBkl6opWokLoE0mLS-WDhwkGag90Nl6dmG9iElh
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUyNDM2MDM1LCJleHAiOjE3NTI0MzYzMzV9.qw2JMiBzlxXgDVsaoYE0bEPfMgBkl6opWokLoE0mLS-WDhwkGag90Nl6dmG9iElh", parameters={masked}
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.server.support.WebSocketHttpRequestHandler@4a10c019
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHttpRequestHandler - GET /ws/chat
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:29 [http-nio-8080-exec-2] INFO  c.m.i.ChatHandshakeInterceptor - WebSocket handshake successful for user: 6873920969aa0d65230a1e2a, appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-14 01:17:29 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New StandardWebSocketSession[id=ae498531-e36b-7414-af55-63de47eb8b75, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUyNDM2MDM1LCJleHAiOjE3NTI0MzYzMzV9.qw2JMiBzlxXgDVsaoYE0bEPfMgBkl6opWokLoE0mLS-WDhwkGag90Nl6dmG9iElh]
2025-07-14 01:17:29 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection established: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b, sessionId=ae498531-e36b-7414-af55-63de47eb8b75
2025-07-14 01:17:29 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user online status: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b, userRole=DOCTOR
2025-07-14 01:17:29 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:17:29 [http-nio-8080-exec-2] INFO  c.m.handler.ChatWebSocketHandler - Started heartbeat for user: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/chat/history/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#getChatHistory(String)
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b}} for Document{{}} fields.
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ChatMessageResponse(id=68740d1a69aa0d65230a1e3d, appointmentId=68740b1669aa0d65230a1e3b, senderId=6 (truncated)...]
2025-07-14 01:17:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/chat/mark-read/68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/chat/mark-read/68740b1669aa0d65230a1e3b
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/chat/mark-read/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#markMessagesAsRead(String)
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b, senderId=Document{{$ne=6873920969aa0d65230a1e2a}}, isRead=false}} for Document{{}} fields.
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b", "senderId" : { "$ne" : "6873920969aa0d65230a1e2a"}, "isRead" : false} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, appointmentId, senderId, senderType, content, type, timestamp, isSent, isRead, readBy, _class]
2025-07-14 01:17:29 [http-nio-8080-exec-5] INFO  com.mediconnect.service.ChatService - Marked 1 messages as read for appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a
2025-07-14 01:17:29 [http-nio-8080-exec-5] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted read status update: appointmentId=68740b1669aa0d65230a1e3b, readByUserId=6873920969aa0d65230a1e2a, messageIds=[68740d1a69aa0d65230a1e3d]
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:17:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/chat/mark-read/68740b1669aa0d65230a1e3b
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/chat/mark-read/68740b1669aa0d65230a1e3b
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/chat/mark-read/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#markMessagesAsRead(String)
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b, senderId=Document{{$ne=6873920969aa0d65230a1e2a}}, isRead=false}} for Document{{}} fields.
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b", "senderId" : { "$ne" : "6873920969aa0d65230a1e2a"}, "isRead" : false} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:17:30 [http-nio-8080-exec-3] INFO  com.mediconnect.service.ChatService - Marked 0 messages as read for appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 01:17:30 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzYwMTAsImV4cCI6MTc1MjQzNjMxMH0.ii3Z-GtCOK34lORMEmdwOUlpYwrn0EJkYdAynQlmOWK43ATq4kOdAI7kafZQuEtC
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzYwMTAsImV4cCI6MTc1MjQzNjMxMH0.ii3Z-GtCOK34lORMEmdwOUlpYwrn0EJkYdAynQlmOWK43ATq4kOdAI7kafZQuEtC
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzYwMTAsImV4cCI6MTc1MjQzNjMxMH0.ii3Z-GtCOK34lORMEmdwOUlpYwrn0EJkYdAynQlmOWK43ATq4kOdAI7kafZQuEtC", parameters={masked}
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.server.support.WebSocketHttpRequestHandler@4a10c019
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHttpRequestHandler - GET /ws/chat
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:39 [http-nio-8080-exec-10] INFO  c.m.i.ChatHandshakeInterceptor - WebSocket handshake successful for user: 683b188f41e14958ba582bd4, appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-14 01:17:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New StandardWebSocketSession[id=75e1376b-f1e8-2114-fd79-d8629dc0f821, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzYwMTAsImV4cCI6MTc1MjQzNjMxMH0.ii3Z-GtCOK34lORMEmdwOUlpYwrn0EJkYdAynQlmOWK43ATq4kOdAI7kafZQuEtC]
2025-07-14 01:17:39 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection established: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=75e1376b-f1e8-2114-fd79-d8629dc0f821
2025-07-14 01:17:39 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user online status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:17:39 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:39 [http-nio-8080-exec-10] INFO  c.m.handler.ChatWebSocketHandler - Started heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/chat/history/68740b1669aa0d65230a1e3b
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/chat/history/68740b1669aa0d65230a1e3b", parameters={}
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ChatController#getChatHistory(String)
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{appointmentId=68740b1669aa0d65230a1e3b}} for Document{{}} fields.
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "appointmentId" : "68740b1669aa0d65230a1e3b"} fields: Document{{}} for class: class com.mediconnect.model.ChatMessage in collection: chat_messages
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ChatMessageResponse(id=68740d1a69aa0d65230a1e3d, appointmentId=68740b1669aa0d65230a1e3b, senderId=6 (truncated)...]
2025-07-14 01:17:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:17:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:17:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:17:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:17:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:17:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:18:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:18:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:18:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:19:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:19:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:19:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:20:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:20:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:20:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:20:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:20:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:20:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:20:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:20:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=true
2025-07-14 01:20:40 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - StandardWebSocketSession[id=ae498531-e36b-7414-af55-63de47eb8b75, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNzUyNDM2MDM1LCJleHAiOjE3NTI0MzYzMzV9.qw2JMiBzlxXgDVsaoYE0bEPfMgBkl6opWokLoE0mLS-WDhwkGag90Nl6dmG9iElh] closed with CloseStatus[code=1000, reason=Tab closed]
2025-07-14 01:20:40 [http-nio-8080-exec-4] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection closed: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b, sessionId=ae498531-e36b-7414-af55-63de47eb8b75, status=CloseStatus[code=1000, reason=Tab closed]
2025-07-14 01:20:40 [http-nio-8080-exec-4] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user offline status: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b, userRole=DOCTOR
2025-07-14 01:20:40 [http-nio-8080-exec-4] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=6873920969aa0d65230a1e2a, userRole=DOCTOR, isOnline=false
2025-07-14 01:20:40 [http-nio-8080-exec-4] INFO  c.m.handler.ChatWebSocketHandler - Stopped heartbeat for user: userId=6873920969aa0d65230a1e2a, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:20:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:20:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:20:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:21:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:21:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:21:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:21:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:22:59 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:22:59 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:09 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:23:09 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:19 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:23:19 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:29 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:23:29 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:39 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:23:39 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:49 [pool-3-thread-1] DEBUG c.m.handler.ChatWebSocketHandler - Broadcasting heartbeat presence: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:23:49 [pool-3-thread-1] INFO  c.m.handler.ChatWebSocketHandler - Broadcasted user presence update: appointmentId=68740b1669aa0d65230a1e3b, userId=683b188f41e14958ba582bd4, userRole=PATIENT, isOnline=true
2025-07-14 01:23:56 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - StandardWebSocketSession[id=75e1376b-f1e8-2114-fd79-d8629dc0f821, uri=ws://localhost:8080/ws/chat?appointmentId=68740b1669aa0d65230a1e3b&token=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSUVOVCIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTI0MzYwMTAsImV4cCI6MTc1MjQzNjMxMH0.ii3Z-GtCOK34lORMEmdwOUlpYwrn0EJkYdAynQlmOWK43ATq4kOdAI7kafZQuEtC] closed with CloseStatus[code=1000, reason=User disconnected]
2025-07-14 01:23:56 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - WebSocket connection closed: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, sessionId=75e1376b-f1e8-2114-fd79-d8629dc0f821, status=CloseStatus[code=1000, reason=User disconnected]
2025-07-14 01:23:56 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - Broadcasting user offline status: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b, userRole=PATIENT
2025-07-14 01:23:56 [http-nio-8080-exec-8] WARN  c.m.handler.ChatWebSocketHandler - No active sessions for appointment: 68740b1669aa0d65230a1e3b
2025-07-14 01:23:56 [http-nio-8080-exec-8] INFO  c.m.handler.ChatWebSocketHandler - Stopped heartbeat for user: userId=683b188f41e14958ba582bd4, appointmentId=68740b1669aa0d65230a1e3b
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:24:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 01:25:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112649166271325&longitude=85.39135050350656&radius=10&specialization=&page=0&size=10
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112649166271325&longitude=85.39135050350656&radius=10&specialization=&page=0&size=10
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112649166271325&longitude=85.39135050350656&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39135050350656, 26.112649166271325]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39135050350656, 26.112649166271325]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:26:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 01:26:56 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:56 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:26:57 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:26:57 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:26:57 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:26:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:26:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:26:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:26:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:26:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 01:26:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:26:57 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:26:57 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:26:57 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 01:27:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 01:27:09 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20", parameters={masked}
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorDaySlots(String, LocalDate)
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-20 } }, Fields: {}, Sort: {}
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-19T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{calendarId=687408f469aa0d65230a1e31, startTime=2025-07-20T00:58, id=d52e92f6-5034-4df3-af5c-29a6a2 (truncated)...]
2025-07-14 01:27:11 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/day-slots?date=2025-07-20", parameters={masked}
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorDaySlots(String, LocalDate)
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-20 } }, Fields: {}, Sort: {}
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-19T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{calendarId=687408f469aa0d65230a1e31, startTime=2025-07-20T00:58, id=d52e92f6-5034-4df3-af5c-29a6a2 (truncated)...]
2025-07-14 01:27:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=administrator@mediconnect.com, password=Iamnowcool1@, context=null)]
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJhZG1pbmlzdHJhdG9yQG1lZGljb25uZWN0LmNvbSIsIn (truncated)...]
2025-07-14 01:27:34 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=VERIFIED", parameters={masked}
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=REJECTED", parameters={masked}
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=PENDING", parameters={masked}
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : PENDING } }, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : VERIFIED } }, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : REJECTED } }, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "PENDING"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "REJECTED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 01:27:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-08T12:30:53.890, specialty=Cardiology, name=nikhil raj, verifiedAt=null, locat (truncated)...]
2025-07-14 01:27:34 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a82"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=PENDING", parameters={masked}
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : PENDING } }, Fields: {}, Sort: {}
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "PENDING"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a88"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a8a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-08T12:30:53.890, specialty=Cardiology, name=nikhil raj, verifiedAt=null, locat (truncated)...]
2025-07-14 01:27:34 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a90"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a92"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a96"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aaa"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aac"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aae"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abe"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8aca"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8acc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ace"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ada"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8adc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ade"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-01T01:21:07.639, specialty=Cardiology, name=Nischay Raj, verifiedAt=2025-06-01 (truncated)...]
2025-07-14 01:27:34 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/6844a571fdc21038ac1e8ae7
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/6844a571fdc21038ac1e8ae7
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/6844a571fdc21038ac1e8ae7", parameters={}
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorProfile(String)
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae7"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{phoneNumber=9999999999, address=Address(address1=Flat 202, address2=Amgola Road, Aghoria Bazar, Saa (truncated)...]
2025-07-14 01:27:35 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO", parameters={}
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae7"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-07-14 01:27:35 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-07-14 01:27:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/6844a571fdc21038ac1e8ae7/PROFILE_PHOTO", parameters={}
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae7"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-07-14 01:27:37 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=VERIFIED", parameters={masked}
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : VERIFIED } }, Fields: {}, Sort: {}
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a82"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a88"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a8a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a90"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a92"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a96"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aaa"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aac"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aae"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abe"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8aca"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8acc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ace"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ada"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8adc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ade"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-01T01:21:07.639, specialty=Cardiology, name=Nischay Raj, verifiedAt=2025-06-01 (truncated)...]
2025-07-14 01:27:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/682b49a39b08af1a6704d945
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/682b49a39b08af1a6704d945
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/682b49a39b08af1a6704d945", parameters={}
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorProfile(String)
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d945"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{phoneNumber=9175472189, address=Address(address1=Parao Pokhar, address2=Fakuli - Lalganj Road, addr (truncated)...]
2025-07-14 01:27:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO", parameters={}
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d945"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:27:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:27:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=PENDING
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=REJECTED
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO", parameters={}
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=VERIFIED", parameters={masked}
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=PENDING", parameters={masked}
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=REJECTED", parameters={masked}
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/doctors/approvals?status=VERIFIED
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/admin/doctors/approvals?status=VERIFIED", parameters={masked}
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AdminController#getDoctorsByStatus(VerificationStatus)
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : VERIFIED } }, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : VERIFIED } }, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : PENDING } }, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "verificationStatus" : { "$java" : REJECTED } }, Fields: {}, Sort: {}
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d945"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "PENDING"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "REJECTED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6844a571fdc21038ac1e8ae6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-08T12:30:53.890, specialty=Cardiology, name=nikhil raj, verifiedAt=null, locat (truncated)...]
2025-07-14 01:28:01 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68314d555d37715ae44bbc61"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6833452b3390217d0f509823"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b137b41e14958ba582bd1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a82"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a82"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a84"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a86"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a88"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a88"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a8a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5dfdc21038ac1e8a8a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a8e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a90"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a90"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a92"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a92"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a94"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a96"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a96"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a98"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9c"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8a9e"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5efdc21038ac1e8aa8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aaa"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aaa"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aac"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aac"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aae"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aae"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ab8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8aba"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abe"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8abe"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a5ffdc21038ac1e8ac6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ac8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8aca"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8aca"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8acc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8acc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ace"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ace"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad6"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ada"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ad8"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8adc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ade"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ada"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8adc"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ade"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae0"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "68442a60fdc21038ac1e8ae4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-01T01:21:07.639, specialty=Cardiology, name=Nischay Raj, verifiedAt=2025-06-01 (truncated)...]
2025-07-14 01:28:02 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[{lastUpdated=2025-06-01T01:21:07.639, specialty=Cardiology, name=Nischay Raj, verifiedAt=2025-06-01 (truncated)...]
2025-07-14 01:28:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO", parameters={}
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d945"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "administrator@mediconnect.com"}, Fields: {}, Sort: {}
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "administrator@mediconnect.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/s3/documents/682b49a39b08af1a6704d945/PROFILE_PHOTO", parameters={}
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.S3Controller#downloadDocument(String, String)
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d945"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:28:02 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "682b49a39b08af1a6704d944"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:28:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:28:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:28:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:28:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:28:08 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:28:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:28:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -31, 63, 16, 69, 120,  (truncated)...]
2025-07-14 01:28:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11241524867717&longitude=85.3914139152812&radius=10&specialization=&page=0&size=10
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11241524867717&longitude=85.3914139152812&radius=10&specialization=&page=0&size=10
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11241524867717&longitude=85.3914139152812&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.3914139152812, 26.11241524867717]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.3914139152812, 26.11241524867717]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:32:45 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:32:45 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:32:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 01:32:45 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:32:45 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=rajputnikhil433@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJyYWpwdXRuaWtoaWw0MzNAZ21haWwuY29tIiwicm9sZS (truncated)...]
2025-07-14 01:34:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=Nikhil Raj, specialization=Neurology, licenseNumber=LL-54670-999, yea (truncated)...]
2025-07-14 01:34:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={masked}
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:34:19 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:21 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:45 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:49 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:51 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:34:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:35:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:35:19 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:35:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:35:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:35:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:35:51 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:35:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1"}, Fields: {}, Sort: {}
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9dc"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9db"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d8"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "686943b00f73be78c468f9d7"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6856cd1d4c6cbe75c5fc583b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817c"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817b"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d184817a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848179"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "684581cb95421748d1848178"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=686fc9b244e0151a00972ca7, doctorId=6830ce5b4942f66067ccdca1, patientId=683b1 (truncated)...]
2025-07-14 01:35:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "rajputnikhil433@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "rajputnikhil433@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 01:35:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 01:36:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/patient
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/patient
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/patient", parameters={}
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getPatientAppointments(String, String)
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<java.util.List<com.mediconnect.dto.appointment.AppointmentResponse>> com.mediconnect.controller.AppointmentController.getPatientAppointments(java.lang.String,java.lang.String): Missing request attribute 'userId' of type String
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 01:36:17 [http-nio-8080-exec-6] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/appointments/patient - Error: Missing request attribute 'userId' of type String
org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String
	at org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver.handleMissingValue(RequestAttributeMethodArgumentResolver.java:60)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:233)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:228)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@5a309e4]
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String]
2025-07-14 01:36:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11238659811876&longitude=85.39110998758932&radius=10&specialization=&page=0&size=10
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11238659811876&longitude=85.39110998758932&radius=10&specialization=&page=0&size=10
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11238659811876&longitude=85.39110998758932&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39110998758932, 26.11238659811876]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39110998758932, 26.11238659811876]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:36:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:36:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:36:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 01:36:25 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:36:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:36:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 01:36:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:40:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.11246635432752&longitude=85.39118190186007&radius=10&specialization=&page=0&size=10
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.11246635432752&longitude=85.39118190186007&radius=10&specialization=&page=0&size=10
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.11246635432752&longitude=85.39118190186007&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39118190186007, 26.11246635432752]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39118190186007, 26.11246635432752]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 01:43:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 01:43:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 01:43:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 01:43:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 01:43:23 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:23 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 01:43:23 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 01:43:23 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 01:43:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 01:44:14 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:41:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-14 13:41:07 [main] INFO  c.mediconnect.MediConnectApplication - Starting MediConnectApplication using Java 17.0.14 with PID 38984 (/Users/nikhilraj/IdeaProjects/MediConnect/target/classes started by nikhilraj in /Users/nikhilraj/IdeaProjects/MediConnect)
2025-07-14 13:41:07 [main] DEBUG c.mediconnect.MediConnectApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-07-14 13:41:07 [main] INFO  c.mediconnect.MediConnectApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-14 13:41:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-07-14 13:41:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 11 MongoDB repository interfaces.
2025-07-14 13:41:08 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-07-14 13:41:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 13:41:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-07-14 13:41:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 13:41:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 576 ms
2025-07-14 13:41:08 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.3.1"}, "platform": "Java/Homebrew/17.0.14+0"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f51f588, com.mongodb.Jep395RecordCodecProvider@6fb22ae3, com.mongodb.KotlinCodecProvider@6bd92538]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-14 13:41:08 [cluster-ClusterId{value='6874bb9c91ec2a09b73c9ef4', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36811458}
2025-07-14 13:41:08 [main] DEBUG c.m.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-07-14 13:41:08 [main] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: {}, Fields: {}, Sort: { "lastExecutedAt" : -1}
2025-07-14 13:41:08 [main] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: {} fields: Document{{}} for class: class com.mediconnect.model.FlywayConfig in collection: flyway_config
2025-07-14 13:41:08 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/chat] in 'webSocketHandlerMapping'
2025-07-14 13:41:08 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 53 mappings in 'requestMappingHandlerMapping'
2025-07-14 13:41:08 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-14 13:41:08 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28dd8786, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70efdd18, org.springframework.security.web.context.SecurityContextHolderFilter@72ea6fcb, org.springframework.security.web.header.HeaderWriterFilter@6870a76f, org.springframework.web.filter.CorsFilter@247a8411, org.springframework.security.web.authentication.logout.LogoutFilter@7a2ffb0b, com.mediconnect.security.JwtAuthenticationFilter@1a43a88e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4154ecd3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b53ce18, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c05f83b, org.springframework.security.web.session.SessionManagementFilter@6f6c6c70, org.springframework.security.web.access.ExceptionTranslationFilter@1a34772e, org.springframework.security.web.access.intercept.AuthorizationFilter@41433530]
2025-07-14 13:41:08 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-14 13:41:08 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-14 13:41:08 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-07-14 13:41:08 [main] INFO  c.mediconnect.MediConnectApplication - Started MediConnectApplication in 1.642 seconds (process running for 7.868)
2025-07-14 13:42:18 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 13:42:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@36406d87
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@514831e4
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-14 13:42:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 13:42:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 13:42:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 13:42:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 13:42:19 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 13:42:22 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 13:42:22 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 13:42:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 13:42:23 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 13:42:24 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 13:42:24 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 13:42:24 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:24 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 13:42:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 13:42:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 13:42:30 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 13:43:41 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 13:43:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 13:46:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 13:50:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 13:53:25 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 13:53:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 13:54:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 13:58:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:02:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:03:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:03:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:03:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:03:55 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:04:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:04:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:05:33 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:05:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:06:10 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:06:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:07:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:08:40 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:08:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:09:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:10:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:11:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:12:19 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:12:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 14:13:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:40 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 14:13:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 14:13:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:13:50 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:14:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:24 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:44 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:14:59 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:17 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:21 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:47 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:53 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:15:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:16:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:16:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 14:16:39 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:16:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:16:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:17:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:18:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:19:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:20:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:20:01 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:22:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:22:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:22:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:26:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:28:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:28:46 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 14:28:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 14:28:47 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 14:28:48 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 14:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-31", parameters={masked}
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=003ce4b6-aefd-4d9d-95f4-95f98aa0f542, calendarI (truncated)...]
2025-07-14 14:28:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:30:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 14:30:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-31", parameters={masked}
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=003ce4b6-aefd-4d9d-95f4-95f98aa0f542, calendarI (truncated)...]
2025-07-14 14:32:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:34:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 14:34:42 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 14:34:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 14:34:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 14:34:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:34:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:44 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:45 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03", parameters={masked}
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-01 }, { "$java" : 2025-07-02 }, { "$java" : 2025-07-03 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-06-30T18:30:00Z"}, { "$date" : "2025-07-01T18:30:00Z"}, { "$date" : "2025-07-02T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:48 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:34:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:34:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 14:34:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 14:35:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 14:35:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 14:35:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-31
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-31", parameters={masked}
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=003ce4b6-aefd-4d9d-95f4-95f98aa0f542, calendarI (truncated)...]
2025-07-14 14:35:28 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-28,2025-07-29,2025-07-30", parameters={masked}
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-28 }, { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-27T18:30:00Z"}, { "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 14:35:30 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27", parameters={masked}
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 14:35:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 14:35:30 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-19,2025-07-20,2025-07-21", parameters={masked}
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 }, { "$java" : 2025-07-21 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}, { "$date" : "2025-07-20T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=d52e92f6-5034-4df3-af5c-29a6a2de2761, calendarI (truncated)...]
2025-07-14 14:35:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:35:30 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:31 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03", parameters={masked}
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-01 }, { "$java" : 2025-07-02 }, { "$java" : 2025-07-03 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-06-30T18:30:00Z"}, { "$date" : "2025-07-01T18:30:00Z"}, { "$date" : "2025-07-02T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-04,2025-07-05,2025-07-06", parameters={masked}
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:35 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-04 }, { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-03T18:30:00Z"}, { "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-07,2025-07-08,2025-07-09", parameters={masked}
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 }, { "$java" : 2025-07-09 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}, { "$date" : "2025-07-08T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:35:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:38:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:42:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 14:43:08 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112152137495716&longitude=85.39153287553484&radius=10&specialization=&page=0&size=10
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112152137495716&longitude=85.39153287553484&radius=10&specialization=&page=0&size=10
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112152137495716&longitude=85.39153287553484&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39153287553484, 26.112152137495716]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39153287553484, 26.112152137495716]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 14:43:11 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 14:43:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 14:43:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 14:43:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 14:43:11 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/6873920969aa0d65230a1e2a/month-slots", parameters={}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=6873920969aa0d65230a1e2a, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2c"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2d"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e2f"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e30"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e31"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e32"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e33"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e34"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e35"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e36"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e37"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e38"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e39"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"}, Fields: {}, Sort: {}
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "patientId" : "683b188f41e14958ba582bd4", "calendarId" : "687408f469aa0d65230a1e3a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{2025-07-31={hasAvailableSlot=true, hasAppointment=false}, 2025-07-30={hasAvailableSlot=true, hasApp (truncated)...]
2025-07-14 14:43:16 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:46:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 14:47:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 14:49:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 14:49:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 14:49:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:49:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112169884686683&longitude=85.391238075923&radius=10&specialization=&page=0&size=10
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112169884686683&longitude=85.391238075923&radius=10&specialization=&page=0&size=10
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112169884686683&longitude=85.391238075923&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.391238075923, 26.112169884686683]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.391238075923, 26.112169884686683]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 14:49:47 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 14:49:47 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:49:48 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 14:49:48 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:48 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:49:48 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 14:49:48 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:48 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 14:49:48 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 14:49:48 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:48 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 14:49:48 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 14:49:48 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 14:49:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:50:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 14:51:08 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:54:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 14:55:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:57:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 14:57:50 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 14:57:50 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:58:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 14:58:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 14:58:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 14:59:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 14:59:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:02:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:03:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:06:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:07:08 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:09:45 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:09:52 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:09:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:10:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:11:08 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:14:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:15:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:18:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:19:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:22:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:23:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:26:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/patient
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/patient
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/patient", parameters={}
2025-07-14 15:26:34 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getPatientAppointments(String, String)
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<java.util.List<com.mediconnect.dto.appointment.AppointmentResponse>> com.mediconnect.controller.AppointmentController.getPatientAppointments(java.lang.String,java.lang.String): Missing request attribute 'userId' of type String
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleGenericException(Exception, WebRequest)
2025-07-14 15:26:35 [http-nio-8080-exec-8] ERROR c.m.exception.GlobalExceptionHandler - Unhandled exception occurred for request: uri=/api/appointments/patient - Error: Missing request attribute 'userId' of type String
org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String
	at org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver.handleMissingValue(RequestAttributeMethodArgumentResolver.java:60)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:233)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:228)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@26a24138]
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.ServletRequestBindingException: Missing request attribute 'userId' of type String]
2025-07-14 15:26:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 15:27:09 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:30:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 15:30:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 15:30:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 15:30:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15", parameters={masked}
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:30:40 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-16,2025-07-17,2025-07-18", parameters={masked}
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-16 }, { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-15T18:30:00Z"}, { "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:30:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:34:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:34:26 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:34:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:34:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:34:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:34:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28", parameters={masked}
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 }, { "$java" : 2025-07-28 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}, { "$date" : "2025-07-27T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 15:35:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31", parameters={masked}
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 }, { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}, { "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 15:36:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:38:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:38:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:42:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:42:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28", parameters={masked}
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 }, { "$java" : 2025-07-28 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}, { "$date" : "2025-07-27T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 15:42:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:42:51 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:42:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 15:43:45 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 15:43:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:43:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:43:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:43:45 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:46 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 15:43:46 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 15:43:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 15:43:46 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:43:48 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 15:44:01 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 15:44:01 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 15:44:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:44:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 15:44:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 15:44:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:44:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:46:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:46:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:50:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:50:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:54:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:54:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:54:46 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:54:47 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:54:47 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:54:47 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:55:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:15 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:16 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:16 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:55:16 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16", parameters={masked}
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 }, { "$java" : 2025-07-16 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}, { "$date" : "2025-07-15T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:16 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-09 }, { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-08T18:30:00Z"}, { "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08", parameters={masked}
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 }, { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}, { "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03,2025-07-04
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03,2025-07-04
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-01,2025-07-02,2025-07-03,2025-07-04", parameters={masked}
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-01 }, { "$java" : 2025-07-02 }, { "$java" : 2025-07-03 }, { "$java" : 2025-07-04 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-06-30T18:30:00Z"}, { "$date" : "2025-07-01T18:30:00Z"}, { "$date" : "2025-07-02T18:30:00Z"}, { "$date" : "2025-07-03T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-05,2025-07-06,2025-07-07,2025-07-08", parameters={masked}
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-05 }, { "$java" : 2025-07-06 }, { "$java" : 2025-07-07 }, { "$java" : 2025-07-08 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-04T18:30:00Z"}, { "$date" : "2025-07-05T18:30:00Z"}, { "$date" : "2025-07-06T18:30:00Z"}, { "$date" : "2025-07-07T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-09,2025-07-10,2025-07-11,2025-07-12", parameters={masked}
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-09 }, { "$java" : 2025-07-10 }, { "$java" : 2025-07-11 }, { "$java" : 2025-07-12 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-08T18:30:00Z"}, { "$date" : "2025-07-09T18:30:00Z"}, { "$date" : "2025-07-10T18:30:00Z"}, { "$date" : "2025-07-11T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16", parameters={masked}
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 }, { "$java" : 2025-07-16 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}, { "$date" : "2025-07-15T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 15:55:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:55:19 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-21,2025-07-22,2025-07-23,2025-07-24", parameters={masked}
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-21 }, { "$java" : 2025-07-22 }, { "$java" : 2025-07-23 }, { "$java" : 2025-07-24 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-20T18:30:00Z"}, { "$date" : "2025-07-21T18:30:00Z"}, { "$date" : "2025-07-22T18:30:00Z"}, { "$date" : "2025-07-23T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=1266f96e-8c59-410a-945d-01d2e6f0c33a, calendarI (truncated)...]
2025-07-14 15:55:19 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-25,2025-07-26,2025-07-27,2025-07-28", parameters={masked}
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-25 }, { "$java" : 2025-07-26 }, { "$java" : 2025-07-27 }, { "$java" : 2025-07-28 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-24T18:30:00Z"}, { "$date" : "2025-07-25T18:30:00Z"}, { "$date" : "2025-07-26T18:30:00Z"}, { "$date" : "2025-07-27T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=e7bbf2ae-06b2-4fe4-bd47-3bcaf43e5bb0, calendarI (truncated)...]
2025-07-14 15:55:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31", parameters={masked}
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 }, { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}, { "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 15:55:19 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:58:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31", parameters={masked}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:59:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 }, { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}, { "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 15:59:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-29,2025-07-30,2025-07-31", parameters={masked}
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-29 }, { "$java" : 2025-07-30 }, { "$java" : 2025-07-31 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-28T18:30:00Z"}, { "$date" : "2025-07-29T18:30:00Z"}, { "$date" : "2025-07-30T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=12790fa0-272c-4740-9514-3a50a84dad7a, calendarI (truncated)...]
2025-07-14 15:59:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 15:59:23 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:02:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:02:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:06:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:06:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:10:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:10:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:14:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:14:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:18:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:22:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39130263351244, 26.112295476697856]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39130263351244, 26.112295476697856]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 16:23:28 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:23:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:23:28 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 16:23:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 16:23:28 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=booking)]
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 16:23:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 16:23:37 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 16:24:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:26:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112295476697856&longitude=85.39130263351244&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39130263351244, 26.112295476697856]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39130263351244, 26.112295476697856]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 16:26:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:26:41 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:26:41 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 16:26:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 16:26:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=patient1@gmail.com, password=Iamnowcool1@, context=booking)]
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUk9MRV (truncated)...]
2025-07-14 16:27:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 16:27:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:30:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 16:31:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:34:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 16:35:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:38:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJ0eXBlIj (truncated)...]
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJwYXRpZW50MUBnbWFpbC5jb20iLCJyb2xlIjoiUEFUSU (truncated)...]
2025-07-14 16:39:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor/683c5373cce9c0253ab78803/month-slots
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor/683c5373cce9c0253ab78803/month-slots", parameters={}
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorMonthSlots(String)
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "patient1@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "patient1@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{doctorId=683c5373cce9c0253ab78803, date=Document{{$gte=Mon Jul 14 00:00:00 IST 2025, $lte=Thu Jul 31 00:00:00 IST 2025}}}} for Document{{}} fields.
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$gte" : { "$date" : "2025-07-13T18:30:00Z"}, "$lte" : { "$date" : "2025-07-30T18:30:00Z"}}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{}]
2025-07-14 16:42:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/search?latitude=26.112383640345644&longitude=85.39140122618203&radius=10&specialization=&page=0&size=10
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/search?latitude=26.112383640345644&longitude=85.39140122618203&radius=10&specialization=&page=0&size=10
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/search?latitude=26.112383640345644&longitude=85.39140122618203&radius=10&specialization=&page=0&size=10", parameters={masked}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorSearchController#searchDoctors(String, Integer, String, String, String, Double, Double, Double, String, int, int)
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.q.StringBasedMongoQuery - Created query Document{{verificationStatus=VERIFIED, location=Document{{$near=Document{{$geometry=Document{{type=Point, coordinates=[85.39140122618203, 26.112383640345644]}}, $maxDistance=10000.0}}}}}} for Document{{}} fields.
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "verificationStatus" : "VERIFIED", "location" : { "$near" : { "$geometry" : { "type" : "Point", "coordinates" : [85.39140122618203, 26.112383640345644]}, "$maxDistance" : 10000.0}}} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683c5373cce9c0253ab78803"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683c5373cce9c0253ab78803", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6830ce5b4942f66067ccdca1"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6830ce5b4942f66067ccdca1", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa5dd459fa235b02fa410"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa5dd459fa235b02fa410", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683aa683459fa235b02fa412"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "683aa683459fa235b02fa412", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [Page 1 of 1 containing com.mediconnect.dto.doctor.DoctorSearchResponse instances]
2025-07-14 16:42:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/c37aee60-8fe6-4c3a-b00c-1742161ca272", parameters={}
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/2f019935-c5d0-4a45-8518-fd17c28ab0f2", parameters={}
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/documents/8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/8fa4b576-64ae-4872-a810-ba2221fba044", parameters={}
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/documents/152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb", parameters={}
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.PublicDocumentController#downloadDocumentById(String)
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"}, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"}, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"}, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "2f019935-c5d0-4a45-8518-fd17c28ab0f2"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "8fa4b576-64ae-4872-a810-ba2221fba044"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "152f10ee-de1d-41e4-8fc2-73ca9d9bf5eb"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"}, Fields: {}, Sort: {}
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "profilePhotoId" : "c37aee60-8fe6-4c3a-b00c-1742161ca272"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:42:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 62, 0, 0, 0, 109, 8, 6, 0,  (truncated)...]
2025-07-14 16:42:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/png' in response
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{82, 73, 70, 70, -40, 121, 0, 0, 87, 69, 66, 80, 86, 80, 56, 32, -52, 121, 0, 0, -16, 12, 2, -99, 1, (truncated)...]
2025-07-14 16:42:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:image/jpeg' in response
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 16:42:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:42:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:46:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:50:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:54:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 16:58:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:02:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:06:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:10:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:14:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:18:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:22:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:26:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:30:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:34:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:38:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:42:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:46:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:50:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:54:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 17:58:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:23 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 17:58:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 17:58:24 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:58:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 17:58:25 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:25 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 17:58:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 17:58:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:02:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:06:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:10:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:14:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:18:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:22:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=18:23, endTime=17:00, isRecurring=false, recurri (truncated)...]
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 18:24:03 [http-nio-8080-exec-5] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot add a slot. Please reduce slot duration
com.mediconnect.exception.SlotException: Cannot add a slot. Please reduce slot duration
	at com.mediconnect.exception.SlotException.slotLargeConflict(SlotException.java:91)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateTimeSlotCombination(ScheduleServiceImpl.java:86)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:200)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@28f01ba8]
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [SlotException[errorCode=SLOT_012, message=Cannot add a slot. Please reduce slot duration]]
2025-07-14 18:24:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:26:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:30:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:34:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:38:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:42:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:46:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:50:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:54:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 18:58:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:02:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:06:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:10:36 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:14:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:18:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 19:22:36 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:33:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /main.6f80a004675ef26eaf05.hot-update.json
2025-07-14 19:56:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 19:56:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 19:56:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 19:56:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 19:56:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 19:56:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:00:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:04:21 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:08:21 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:12:21 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:16:21 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:20:21 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:24:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:28:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:45:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /main.864304f67bc3c9263857.hot-update.json
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 20:45:59 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 20:45:59 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:45:59 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:46:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 20:46:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 20:46:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 20:46:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:49:59 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:53:59 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 20:57:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 13F97187E2722D2BB967ABE414B262A3
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:01:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#login(LoginRequest)
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(email=trex@gmail.com, password=Iamnowcool1@, context=null)]
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJST0xFX0RPQ1 (truncated)...]
2025-07-14 21:23:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 21:23:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:03 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 21:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 21:23:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:23:07 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-14", parameters={masked}
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-14 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-13T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 21:23:29 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:27:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:31:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:32:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:32:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:33:00 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-14", parameters={masked}
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-14 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-13T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 21:33:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:33:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-14
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-14", parameters={masked}
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-14 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-13T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[])]
2025-07-14 21:33:25 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:35:03 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:39:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:43:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:47:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 21:48:11 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 21:48:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 21:48:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 21:48:13 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:51:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:55:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 21:59:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/schedule/calendar/687408f469aa0d65230a1e2e/slots/740d235e-2d2c-4e8a-9c63-3d7cc7c99cb4
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/schedule/calendar/687408f469aa0d65230a1e2e/slots/740d235e-2d2c-4e8a-9c63-3d7cc7c99cb4
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/schedule/calendar/687408f469aa0d65230a1e2e/slots/740d235e-2d2c-4e8a-9c63-3d7cc7c99cb4", parameters={}
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#deleteSlot(String, String)
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "id" : "687408f469aa0d65230a1e2e", "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "_id" : { "$oid" : "687408f469aa0d65230a1e2e"}, "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-14 22:01:33 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:01:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:03:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:07:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:10:50 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:11:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:11:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:15:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:19:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:23:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:26:36 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:26:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:26:37 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:26:37 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:27:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:31:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:35:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:39:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:43:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 22:44:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:34 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:35 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 22:44:35 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 22:44:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:44:36 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:44:37 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:47:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:51:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:55:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:00 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:01 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 22:59:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:09 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/appointments/doctor
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/appointments/doctor
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/appointments/doctor", parameters={}
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AppointmentController#getDoctorAppointments(String, LocalDate)
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.Appointment in collection: appointments
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "683b188f41e14958ba582bd4"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "687408f469aa0d65230a1e2e"} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponse(id=68740b1669aa0d65230a1e3b, doctorId=6873920969aa0d65230a1e2a, patientId=683b1 (truncated)...]
2025-07-14 22:59:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 22:59:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:03:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:07:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:07:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:11:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:15:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:19:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:23:04 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:27:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:31:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=23:32, endTime=17:00, isRecurring=false, recurri (truncated)...]
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 23:33:02 [http-nio-8080-exec-2] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot add a slot. Please reduce slot duration
com.mediconnect.exception.SlotException: Cannot add a slot. Please reduce slot duration
	at com.mediconnect.exception.SlotException.slotLargeConflict(SlotException.java:91)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateTimeSlotCombination(ScheduleServiceImpl.java:86)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:200)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@612b69d0]
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [SlotException[errorCode=SLOT_012, message=Cannot add a slot. Please reduce slot duration]]
2025-07-14 23:33:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=23:33, endTime=17:00, isRecurring=false, recurri (truncated)...]
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 23:34:34 [http-nio-8080-exec-5] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot add a slot. Please reduce slot duration
com.mediconnect.exception.SlotException: Cannot add a slot. Please reduce slot duration
	at com.mediconnect.exception.SlotException.slotLargeConflict(SlotException.java:91)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateTimeSlotCombination(ScheduleServiceImpl.java:86)
	at com.mediconnect.service.impl.ScheduleServiceImpl.validateSlotRequest(ScheduleServiceImpl.java:200)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:48)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@4ced0466]
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [SlotException[errorCode=SLOT_012, message=Cannot add a slot. Please reduce slot duration]]
2025-07-14 23:34:34 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:35:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:36:45 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:37:09 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-15, startTime=01:00, endTime=07:35, isRecurring=true, recurrin (truncated)...]
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 23:37:58 [http-nio-8080-exec-7] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null
java.lang.NullPointerException: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null
	at java.base/java.time.chrono.ChronoLocalDate.isAfter(ChronoLocalDate.java:729)
	at java.base/java.time.LocalDate.isAfter(LocalDate.java:2054)
	at com.mediconnect.service.impl.ScheduleServiceImpl.createSlots(ScheduleServiceImpl.java:231)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:50)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@47d3fe20]
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.NullPointerException: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null]
2025-07-14 23:37:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:39:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=01:00, endTime=07:35, isRecurring=true, recurrin (truncated)...]
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:39:23 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:39:55 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mediconnect.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, WebRequest)
2025-07-14 23:39:55 [http-nio-8080-exec-3] ERROR c.m.exception.GlobalExceptionHandler - Runtime exception occurred for request: uri=/api/schedule/slots - Error: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null
java.lang.NullPointerException: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null
	at java.base/java.time.chrono.ChronoLocalDate.isAfter(ChronoLocalDate.java:729)
	at java.base/java.time.LocalDate.isAfter(LocalDate.java:2054)
	at com.mediconnect.service.impl.ScheduleServiceImpl.createSlots(ScheduleServiceImpl.java:231)
	at com.mediconnect.service.impl.ScheduleServiceImpl.addSlots(ScheduleServiceImpl.java:50)
	at com.mediconnect.controller.ScheduleController.addSlots(ScheduleController.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.mediconnect.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:127)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-07-14 23:39:55 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:39:55 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mediconnect.exception.GlobalExceptionHandler$ErrorResponse@1a474bc0]
2025-07-14 23:39:55 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.NullPointerException: Cannot invoke "java.time.chrono.ChronoLocalDate.toEpochDay()" because "other" is null]
2025-07-14 23:39:55 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-14, startTime=23:42, endTime=23:57, isRecurring=false, recurri (truncated)...]
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:19 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:26 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-14 } }, Fields: {}, Sort: {}
2025-07-14 23:42:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-13T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:42:26 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 23:42:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:42:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=null, calendarId=null, startTime=2025-07-14T23: (truncated)...]
2025-07-14 23:42:28 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:42:28 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-13,2025-07-14,2025-07-15,2025-07-16", parameters={masked}
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-13 }, { "$java" : 2025-07-14 }, { "$java" : 2025-07-15 }, { "$java" : 2025-07-16 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-12T18:30:00Z"}, { "$date" : "2025-07-13T18:30:00Z"}, { "$date" : "2025-07-14T18:30:00Z"}, { "$date" : "2025-07-15T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=4c681f06-f197-4c52-9486-46eb4bfe36fe, calendarI (truncated)...]
2025-07-14 23:42:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:42:33 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:43:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:44:16 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:47:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:51:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/profile
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/profile
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/profile", parameters={}
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDoctorProfile()
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "userId" : "6873920969aa0d65230a1e2a"}, Fields: {}, Sort: {}
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "userId" : "6873920969aa0d65230a1e2a"} fields: Document{{}} for class: class com.mediconnect.model.DoctorProfile in collection: doctor_profiles
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [DoctorProfileResponse(fullName=T. Rex, specialization=Cardiology, licenseNumber=ABC123, yearsOfExper (truncated)...]
2025-07-14 23:51:38 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/doctors/documents/PROFILE_PHOTO?documentId=8fa4b576-64ae-4872-a810-ba2221fba044", parameters={masked}
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.DoctorController#getDocument(String, String)
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:38 [http-nio-8080-exec-3] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/octet-stream' in response
2025-07-14 23:51:39 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, -1, -30, 1, -40, 73, 67, 67, (truncated)...]
2025-07-14 23:51:39 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:51:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:55:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/schedule/slots
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/schedule/slots
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/schedule/slots", parameters={}
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#addSlots(ScheduleSlotRequest)
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ScheduleSlotRequest(startDate=2025-07-15, startTime=01:00, endTime=16:55, isRecurring=true, recurrin (truncated)...]
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:56:19 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:56:26 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-16 } }, Fields: {}, Sort: {}
2025-07-14 23:56:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-15T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:26 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:27 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-17 } }, Fields: {}, Sort: {}
2025-07-14 23:56:27 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-16T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:28 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:28 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-18 } }, Fields: {}, Sort: {}
2025-07-14 23:56:28 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-17T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:28 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-19 } }, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-18T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-20 } }, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-19T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Saving Document containing fields: [_id, doctorId, date, slots, _class]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$java" : 2025-07-21 } }, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$date" : "2025-07-20T18:30:00Z"}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.data.mongodb.core.MongoTemplate - Inserting Document containing fields: [doctorId, date, slots, _class] in collection: calendar
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=null, calendarId=null, startTime=2025-07-16T01: (truncated)...]
2025-07-14 23:56:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:56:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:58:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/schedule/daily?dates=2025-07-17,2025-07-18,2025-07-19,2025-07-20", parameters={masked}
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.ScheduleController#getDailySchedule(List)
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [ { "$java" : 2025-07-17 }, { "$java" : 2025-07-18 }, { "$java" : 2025-07-19 }, { "$java" : 2025-07-20 } ] } }, Fields: {}, Sort: {}
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "doctorId" : "6873920969aa0d65230a1e2a", "date" : { "$in" : [{ "$date" : "2025-07-16T18:30:00Z"}, { "$date" : "2025-07-17T18:30:00Z"}, { "$date" : "2025-07-18T18:30:00Z"}, { "$date" : "2025-07-19T18:30:00Z"}]}} fields: Document{{}} for class: class com.mediconnect.model.Calendar in collection: calendar
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ScheduleResponse(slots=[ScheduleResponse.TimeSlot(id=6cbb649d-e6d2-44c4-bc77-31dfc09e1111, calendarI (truncated)...]
2025-07-14 23:59:01 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/refresh", parameters={}
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mediconnect.controller.AuthController#refreshToken(RefreshTokenRequest)
2025-07-14 23:59:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshTokenRequest(refreshToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInR5cGUiOiJyZW (truncated)...]
2025-07-14 23:59:04 [http-nio-8080-exec-8] DEBUG o.s.d.m.r.query.MongoQueryCreator - Created query Query: { "email" : "trex@gmail.com"}, Fields: {}, Sort: {}
2025-07-14 23:59:04 [http-nio-8080-exec-8] DEBUG o.s.data.mongodb.core.MongoTemplate - find using query: { "email" : "trex@gmail.com"} fields: Document{{}} for class: class com.mediconnect.model.User in collection: users
2025-07-14 23:59:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-14 23:59:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponse(accessToken=eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJ0cmV4QGdtYWlsLmNvbSIsInJvbGUiOiJET0NUT1IiLC (truncated)...]
2025-07-14 23:59:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
